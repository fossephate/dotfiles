// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      // "shift shift": "file_finder::Toggle"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      // "j k": "vim::NormalBefore"
    }
  },
  {
    "context": "vim_mode == normal",
    "bindings": {
      "shift-u": "vim::Redo",
      "space e": "project_panel::ToggleFocus",
      // "space f f": "file_finder::Toggle",
      "space f": "editor::ToggleFold",
      "cmd-e": "project_panel::ToggleFocus"
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      "enter": "search::SelectNextMatch",
      "shift-enter": "search::SelectPreviousMatch",
      "cmd-g": "search::SelectNextMatch",
      "cmd-shift-g": "search::SelectPreviousMatch"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      "cmd-t": "terminal_panel::ToggleFocus"
      // "cmd-e": "project_panel::ToggleFocus" // doesn't work for some reason :/
      // "cmd-shift-t":
    }
  },
  {
    "context": "Editor && edit_prediction_conflict",
    "bindings": {
      "enter": "editor::ConfirmCompletionInsert", // Example of a modified keybinding
      "tab": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "Editor && edit_prediction",
    "bindings": {
      // Here we also allow `alt-enter` to accept the prediction
      "shift-tab": "editor::AcceptPartialEditPrediction",
      "tab": "editor::AcceptEditPrediction"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "shift-c": "project_panel::CollapseAllEntries"
    }
  }
]
